openapi: 3.0.3
info:
  title: goaサンプル
  description: これはgoaを使ったサンプルのAPIです
  version: "1.0"
servers:
- url: http://0.0.0.0:8088
  description: goa hosts the Calculator Service.
  variables:
    version:
      default: v1
paths:
  /users:
    get:
      tags:
      - user_controller
      summary: GetUsers user_controller
      description: ユーザ一覧の検索
      operationId: user_controller#GetUsers
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                example:
                - email: xxxxxx@xxxx.xxx
                  id: 4535915402725465940
                  name: John Lennon
                - email: xxxxxx@xxxx.xxx
                  id: 4535915402725465940
                  name: John Lennon
                - email: xxxxxx@xxxx.xxx
                  id: 4535915402725465940
                  name: John Lennon
                - email: xxxxxx@xxxx.xxx
                  id: 4535915402725465940
                  name: John Lennon
              example:
              - email: xxxxxx@xxxx.xxx
                id: 4535915402725465940
                name: John Lennon
              - email: xxxxxx@xxxx.xxx
                id: 4535915402725465940
                name: John Lennon
        "400":
          description: 'BadRequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'NotFound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - user_controller
      summary: CreateUser user_controller
      description: ユーザ登録
      operationId: user_controller#CreateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Eメール
                  example: xxxxxx@xxxx.xxx
                  pattern: /^[a-zA-Z0-9_.+-]+@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$/
                  maxLength: 255
                name:
                  type: string
                  description: ユーザー名
                  example: John Lennon
                  maxLength: 20
              example:
                email: xxxxxx@xxxx.xxx
                name: John Lennon
            example:
              email: xxxxxx@xxxx.xxx
              name: John Lennon
      responses:
        "204":
          description: No Content response.
        "400":
          description: 'BadRequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'NotFound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    delete:
      tags:
      - user_controller
      summary: DeleteUser user_controller
      description: ユーザ削除
      operationId: user_controller#DeleteUser
      parameters:
      - name: id
        in: path
        description: ユーザーID
        required: true
        schema:
          type: integer
          description: ユーザーID
          example: 2183071479333183822
          format: int64
        example: 5458088257725756454
      responses:
        "204":
          description: No Content response.
        "400":
          description: 'BadRequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'NotFound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
      - user_controller
      summary: GetUser user_controller
      description: ユーザ検索
      operationId: user_controller#GetUser
      parameters:
      - name: id
        in: path
        description: ユーザーID
        required: true
        schema:
          type: integer
          description: ユーザーID
          example: 1855278949959242542
          format: int64
        example: 4718049963478495430
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                email: xxxxxx@xxxx.xxx
                id: 4379316695164711469
                name: John Lennon
        "400":
          description: 'BadRequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'NotFound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - user_controller
      summary: UpdateUser user_controller
      description: ユーザ更新
      operationId: user_controller#UpdateUser
      parameters:
      - name: id
        in: path
        description: ユーザーID
        required: true
        schema:
          type: integer
          description: ユーザーID
          example: 6997317895835463833
          format: int64
        example: 4875666205636071382
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Eメール
                  example: xxxxxx@xxxx.xxx
                  pattern: /^[a-zA-Z0-9_.+-]+@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$/
                  maxLength: 255
                name:
                  type: string
                  description: ユーザー名
                  example: John Lennon
                  maxLength: 20
              example:
                email: xxxxxx@xxxx.xxx
                name: John Lennon
            example:
              email: xxxxxx@xxxx.xxx
              name: John Lennon
      responses:
        "204":
          description: No Content response.
        "400":
          description: 'BadRequest: Bad Request response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: 'NotFound: Not Found response.'
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: true
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    User:
      type: object
      properties:
        email:
          type: string
          description: Eメール
          example: xxxxxx@xxxx.xxx
          pattern: /^[a-zA-Z0-9_.+-]+@([a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$/
          maxLength: 255
        id:
          type: integer
          description: ユーザーID
          example: 8680079036746007954
          format: int64
        name:
          type: string
          description: ユーザー名
          example: John Lennon
          maxLength: 20
      example:
        email: xxxxxx@xxxx.xxx
        id: 6463800211859572720
        name: John Lennon
tags:
- name: user_controller
  description: ユーザ関連のエンドポイント
